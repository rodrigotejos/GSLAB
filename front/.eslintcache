[{"D:\\PROG\\gslab\\front\\src\\index.js":"1","D:\\PROG\\gslab\\front\\src\\reportWebVitals.js":"2","D:\\PROG\\gslab\\front\\src\\App.js":"3","D:\\PROG\\gslab\\front\\src\\containers\\LoginPage\\LoginPage.jsx":"4","D:\\PROG\\gslab\\front\\src\\components\\Login\\Login.jsx":"5","D:\\PROG\\gslab\\front\\src\\containers\\MainPage\\MainPage.jsx":"6","D:\\PROG\\gslab\\front\\src\\components\\Table\\Table.jsx":"7","D:\\PROG\\gslab\\front\\src\\containers\\EditPage\\EditPage.jsx":"8","D:\\PROG\\gslab\\front\\src\\components\\Edit\\Edit.jsx":"9","D:\\PROG\\gslab\\front\\src\\containers\\AdicionarPage\\AdicionarPage.jsx":"10","D:\\PROG\\gslab\\front\\src\\components\\Adicionar\\Adicionar.jsx":"11"},{"size":501,"mtime":1611951678684,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":1563,"mtime":1612038636455,"results":"15","hashOfConfig":"13"},{"size":221,"mtime":1611948303224,"results":"16","hashOfConfig":"13"},{"size":6001,"mtime":1612037778920,"results":"17","hashOfConfig":"13"},{"size":572,"mtime":1612038740203,"results":"18","hashOfConfig":"13"},{"size":8921,"mtime":1612038283426,"results":"19","hashOfConfig":"13"},{"size":217,"mtime":1611960287619,"results":"20","hashOfConfig":"13"},{"size":6892,"mtime":1611965198689,"results":"21","hashOfConfig":"13"},{"size":247,"mtime":1611961518158,"results":"22","hashOfConfig":"13"},{"size":6109,"mtime":1611962069479,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"w7rcq2",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},"D:\\PROG\\gslab\\front\\src\\index.js",[],["54","55"],"D:\\PROG\\gslab\\front\\src\\reportWebVitals.js",[],"D:\\PROG\\gslab\\front\\src\\App.js",["56","57","58"],"import \"./App.scss\";\n//react imports\nimport React, { useEffect, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\nimport Cookie from \"js-cookie\";\n\n//import of components\nimport MainPage from \"./containers/MainPage/MainPage\";\nimport Login from \"./containers/LoginPage/LoginPage\";\nimport EditPage from \"./containers/EditPage/EditPage\";\nimport AdicionarPage from \"./containers/AdicionarPage/AdicionarPage\";\n\n//import css\nimport \"./index.scss\";\n\nconst App = () => {\n  const jwt = Cookie.get(\"token\");\n  const PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route\n      {...rest}\n      render={(props) =>\n        jwt ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: \"/login\", state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/login\">\n          <Login />\n        </Route>\n        <PrivateRoute exact path=\"/\" component={() => <MainPage />} />\n        <PrivateRoute exact path=\"/edit\" component={() => <EditPage />} />\n        <PrivateRoute\n          exact\n          path=\"/adicionar\"\n          component={() => <AdicionarPage />}\n        />\n        {/*<Route exact path=\"/\">\n          <MainPage />\n        </Route>\n        <Route exact path=\"/edit\">\n          <EditPage />\n        </Route>\n        <Route exact path=\"/adicionar\">\n          <AdicionarPage />\n  </Route>*/}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","D:\\PROG\\gslab\\front\\src\\containers\\LoginPage\\LoginPage.jsx",[],"D:\\PROG\\gslab\\front\\src\\components\\Login\\Login.jsx",["59"],"import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport axios from \"axios\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport Cookie from \"js-cookie\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login = () => {\r\n  const [isShowingAlert, setIsShowingAlert] = useState(false);\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Fragment>\r\n      {isShowingAlert ? (\r\n        <Alert\r\n          variant=\"danger\"\r\n          onClose={() => setIsShowingAlert(false)}\r\n          dismissible\r\n        >\r\n          <Alert.Heading>Usuario e/ou Senha Incorreto!</Alert.Heading>\r\n        </Alert>\r\n      ) : undefined}\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"max-w-md w-full space-y-8\">\r\n          <div>\r\n            <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n              logar para entrar\r\n            </h2>\r\n          </div>\r\n\r\n          <Formik\r\n            initialValues={{\r\n              email: \"\",\r\n              password: \"\",\r\n            }}\r\n            validate={(values) => {\r\n              const errors = {};\r\n              if (values.email === \"\") {\r\n                errors.email = \"Faltou o Email\";\r\n              } else if (values.password === \"\") {\r\n                errors.password = \"Faltou a Senha\";\r\n              }\r\n              return errors;\r\n            }}\r\n            onSubmit={async (values) => {\r\n              console.log(values);\r\n              try {\r\n                delete axios.defaults.headers.common[\"Sec-Fetch-Mode\"];\r\n                const response = await axios.post(\"api/login\", values, {\r\n                  headers: { \"Content-Type\": \"application/json\" },\r\n                });\r\n                console.log(\"login tela\", response);\r\n                Cookie.set(\"token\", response.data.token);\r\n                Cookie.set(\"nome\", response.data.name);\r\n                setTimeout(() => {\r\n                  console.log(\"Hello, World!\");\r\n                  history.push(\"/\");\r\n                }, 1000);\r\n              } catch (error) {\r\n                setIsShowingAlert(true);\r\n              }\r\n            }}\r\n          >\r\n            {({ errors, touched, isValidating, values, handleSubmit }) => {\r\n              console.log(\"values\", values);\r\n              console.log(\"errors\", errors);\r\n              console.log(\"erros verify\", Object.keys(errors).length === 0);\r\n              return (\r\n                <Form\r\n                  className=\"mt-8 space-y-6\"\r\n                  onClick={() => console.log(\"sua api\")}\r\n                >\r\n                  <input type=\"hidden\" name=\"remember\" value=\"true\" />\r\n                  <div className=\"rounded-md shadow-sm -space-y-px\">\r\n                    <div>\r\n                      <label hemltFor=\"email-address\" className=\"sr-only\">\r\n                        Email address\r\n                      </label>\r\n                      <Field\r\n                        id=\"email-address\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        autocomplete=\"email\"\r\n                        required\r\n                        className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                        placeholder=\"Email\"\r\n                      />\r\n                      {errors.email && touched.email && (\r\n                        <div>{errors.email}</div>\r\n                      )}\r\n                    </div>\r\n                    <div>\r\n                      <label htmlFor=\"password\" className=\"sr-only\">\r\n                        Password\r\n                      </label>\r\n                      <Field\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        autocomplete=\"current-password\"\r\n                        required\r\n                        className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                        placeholder=\"Senha\"\r\n                      />\r\n                      {errors.password && touched.password && (\r\n                        <div>{errors.password}</div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\" w-1/2 flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                      onClick={handleSubmit}\r\n                    >\r\n                      <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\"></span>\r\n                      logar\r\n                    </button>\r\n\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\" w-1/2 flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                      onClick={() => history.push(\"/create\")}\r\n                    >\r\n                      <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\"></span>\r\n                      Criar Usuario\r\n                    </button>\r\n                  </div>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\PROG\\gslab\\front\\src\\containers\\MainPage\\MainPage.jsx",["60"],"import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Table from \"../../components/Table/Table\";\r\nimport axios from \"axios\";\r\n\r\nconst MainPage = () => {\r\n  const [data, setData] = useState();\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = await axios.get(\"/api/produto/all\");\r\n      console.log(\"axios data::::\", response);\r\n      setData(response.data);\r\n    })();\r\n  }, []);\r\n  return (\r\n    <Fragment>\r\n      <Table result={data} />\r\n    </Fragment>\r\n  );\r\n};\r\nexport default MainPage;\r\n","D:\\PROG\\gslab\\front\\src\\components\\Table\\Table.jsx",["61"],"import React, { Fragment, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Table = ({ result }) => {\r\n  const history = useHistory();\r\n  const [isShowingAlert, setIsShowingAlert] = useState(false);\r\n  const [values, setValues] = useState();\r\n  return (\r\n    <Fragment>\r\n      {isShowingAlert ? (\r\n        <div class=\"fixed z-10 inset-0 overflow-y-auto\">\r\n          <div class=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n            <div class=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\r\n              <div class=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\r\n            </div>\r\n\r\n            <span\r\n              class=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\r\n              aria-hidden=\"true\"\r\n            >\r\n              &#8203;\r\n            </span>\r\n\r\n            <div\r\n              class=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\"\r\n              role=\"dialog\"\r\n              aria-modal=\"true\"\r\n              aria-labelledby=\"modal-headline\"\r\n            >\r\n              <div class=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                <div class=\"sm:flex sm:items-start\">\r\n                  <div class=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\">\r\n                    <svg\r\n                      class=\"h-6 w-6 text-red-600\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      fill=\"none\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"currentColor\"\r\n                      aria-hidden=\"true\"\r\n                    >\r\n                      <path\r\n                        stroke-linecap=\"round\"\r\n                        stroke-linejoin=\"round\"\r\n                        stroke-width=\"2\"\r\n                        d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\r\n                      />\r\n                    </svg>\r\n                  </div>\r\n                  <div class=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\r\n                    <h3\r\n                      class=\"text-lg leading-6 font-medium text-gray-900\"\r\n                      id=\"modal-headline\"\r\n                    >\r\n                      Remover item\r\n                    </h3>\r\n                    <div class=\"mt-2\">\r\n                      <p class=\"text-sm text-gray-500\">\r\n                        Você tem certeza que dejesa remover o item ?\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm\"\r\n                  onClick={async () => {\r\n                    console.log(\"valores:::::\", values);\r\n                    const response = await axios.delete(\"api/produto\", {\r\n                      data: values,\r\n                    });\r\n                    setIsShowingAlert(false);\r\n                  }}\r\n                >\r\n                  Remover\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\r\n                  onClick={() => setIsShowingAlert(false)}\r\n                >\r\n                  Cancelar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div />\r\n      )}\r\n      <div class=\"flex flex-col\">\r\n        <div class=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\r\n          <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\r\n            <div class=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\r\n              <table class=\"min-w-full divide-y divide-gray-200\">\r\n                <thead class=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th\r\n                      scope=\"col\"\r\n                      class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                      Nome\r\n                    </th>\r\n                    <th\r\n                      scope=\"col\"\r\n                      class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                      Descrição\r\n                    </th>\r\n                    <th\r\n                      scope=\"col\"\r\n                      class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\r\n                    >\r\n                      Valor\r\n                    </th>\r\n                    <th scope=\"col\" class=\"relative px-6 py-3\">\r\n                      <span class=\"sr-only\">Edit</span>\r\n                    </th>\r\n                    <th scope=\"col\" class=\"relative px-6 py-3\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\" w-24flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                        onClick={() => history.push(\"/adicionar\")}\r\n                      >\r\n                        <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\"></span>\r\n                        + Adicionar\r\n                      </button>\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody class=\"bg-white divide-y divide-gray-200\">\r\n                  {result &&\r\n                    result.length &&\r\n                    result.map((item) => {\r\n                      return (\r\n                        <tr>\r\n                          <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                            {item.nome}\r\n                          </td>\r\n                          <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                            {item.descri}\r\n                          </td>\r\n                          <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                            {item.valor}\r\n                          </td>\r\n                          <td class=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\" w-24 flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                              onClick={() =>\r\n                                history.push({\r\n                                  pathname: \"/edit\",\r\n                                  values: item,\r\n                                })\r\n                              }\r\n                            >\r\n                              Editar\r\n                            </button>\r\n                          </td>\r\n                          <td class=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\r\n                            <button\r\n                              type=\"submit\"\r\n                              className=\" w-24 flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                              onClick={() => {\r\n                                console.log(\"valor a ser deletado:::::\", item);\r\n                                setValues(item);\r\n                                setIsShowingAlert(true);\r\n                              }}\r\n                            >\r\n                              Excluir\r\n                            </button>\r\n                          </td>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Table;\r\n","D:\\PROG\\gslab\\front\\src\\containers\\EditPage\\EditPage.jsx",[],"D:\\PROG\\gslab\\front\\src\\components\\Edit\\Edit.jsx",["62"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport axios from \"axios\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Edit = (props) => {\r\n  const location = useLocation();\r\n  const [valuesEdit, setValuesEdit] = useState();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const valuesEdit = location.values;\r\n    console.log(\"values::::\", valuesEdit);\r\n    setValuesEdit(valuesEdit);\r\n  }, [location]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"max-w-md w-full space-y-8\">\r\n          <div>\r\n            <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n              Alterar o item selecionado\r\n            </h2>\r\n          </div>\r\n          {valuesEdit ? (\r\n            <Formik\r\n              initialValues={{\r\n                id_produto: valuesEdit.id_produto,\r\n                nome: valuesEdit.nome,\r\n                descri: valuesEdit.descri,\r\n                valor: valuesEdit.valor,\r\n              }}\r\n              validate={(values) => {\r\n                const errors = {};\r\n                if (values.nome === \"\") {\r\n                  errors.nome = \"Faltou o nome\";\r\n                } else if (values.descri === \"\") {\r\n                  errors.descri = \"Faltou a descricao\";\r\n                } else if (values.valor === \"\") {\r\n                  errors.valor = \"Faltou a valor\";\r\n                }\r\n                return errors;\r\n              }}\r\n              onSubmit={async (values) => {\r\n                console.log(values);\r\n                try {\r\n                  delete axios.defaults.headers.common[\"Sec-Fetch-Mode\"];\r\n                  const response = await axios.put(\"api/produto\", values, {\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                  });\r\n                  history.push(\"/\");\r\n\r\n                  // history.push(\"/\");\r\n                } catch (error) {\r\n                  //setIsShowingAlert(true);\r\n                }\r\n              }}\r\n            >\r\n              {({ errors, touched, isValidating, values, handleSubmit }) => {\r\n                console.log(\"values\", values);\r\n                console.log(\"errors\", errors);\r\n                console.log(\"erros verify\", Object.keys(errors).length === 0);\r\n                return (\r\n                  <Form\r\n                    className=\"mt-8 space-y-6\"\r\n                    onClick={() => console.log(\"sua api\")}\r\n                  >\r\n                    <input type=\"hidden\" name=\"remember\" value=\"true\" />\r\n                    <div className=\"rounded-md shadow-sm -space-y-px\">\r\n                      <div>\r\n                        <div>Nome:</div>\r\n                        <label hemltFor=\"nome\" className=\"sr-only\">\r\n                          Nome\r\n                        </label>\r\n                        <Field\r\n                          id=\"nome\"\r\n                          name=\"nome\"\r\n                          type=\"nome\"\r\n                          required\r\n                          className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                        />\r\n                        {errors.nome && touched.nome && (\r\n                          <div>{errors.nome}</div>\r\n                        )}\r\n                      </div>\r\n                      <div>\r\n                        <div>Descrição:</div>\r\n                        <label htmlFor=\"descri\" className=\"sr-only\">\r\n                          Descrição\r\n                        </label>\r\n                        <Field\r\n                          id=\"descri\"\r\n                          name=\"descri\"\r\n                          type=\"descri\"\r\n                          required\r\n                          className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                        />\r\n                        {errors.descri && touched.descri && (\r\n                          <div>{errors.descri}</div>\r\n                        )}\r\n                      </div>\r\n                      <div>\r\n                        <div>Valor:</div>\r\n                        <label htmlFor=\"valor\" className=\"sr-only\">\r\n                          Valor\r\n                        </label>\r\n                        <Field\r\n                          id=\"valor\"\r\n                          name=\"valor\"\r\n                          type=\"valor\"\r\n                          required\r\n                          className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                        />\r\n                        {errors.valor && touched.valor && (\r\n                          <div>{errors.valor}</div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\" w-1/2 flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                        onClick={handleSubmit}\r\n                      >\r\n                        <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\"></span>\r\n                        Alterar\r\n                      </button>\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\" w-1/2 flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                        onClick={() => {\r\n                          history.push(\"/\");\r\n                        }}\r\n                      >\r\n                        <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\"></span>\r\n                        Cancelar\r\n                      </button>\r\n                    </div>\r\n                  </Form>\r\n                );\r\n              }}\r\n            </Formik>\r\n          ) : (\r\n            <div />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Edit;\r\n","D:\\PROG\\gslab\\front\\src\\containers\\AdicionarPage\\AdicionarPage.jsx",[],"D:\\PROG\\gslab\\front\\src\\components\\Adicionar\\Adicionar.jsx",["63","64","65"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Adicionar = (props) => {\r\n  const history = useHistory();\r\n  return (\r\n    <Fragment>\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"max-w-md w-full space-y-8\">\r\n          <div>\r\n            <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n              Adicionar um item\r\n            </h2>\r\n          </div>\r\n\r\n          <Formik\r\n            initialValues={{\r\n              nome: \"\",\r\n              descri: \"\",\r\n              valor: \"\",\r\n            }}\r\n            validate={(values) => {\r\n              const errors = {};\r\n              if (values.nome === \"\") {\r\n                errors.nome = \"Faltou o nome\";\r\n              } else if (values.descri === \"\") {\r\n                errors.descri = \"Faltou a descricao\";\r\n              } else if (values.valor === \"\") {\r\n                errors.valor = \"Faltou a valor\";\r\n              }\r\n              return errors;\r\n            }}\r\n            onSubmit={async (values) => {\r\n              console.log(values);\r\n              try {\r\n                delete axios.defaults.headers.common[\"Sec-Fetch-Mode\"];\r\n                const response = await axios.post(\"api/produto\", values, {\r\n                  headers: { \"Content-Type\": \"application/json\" },\r\n                });\r\n\r\n                // history.push(\"/\");\r\n              } catch (error) {\r\n                //setIsShowingAlert(true);\r\n              }\r\n            }}\r\n          >\r\n            {({ errors, touched, isValidating, values, handleSubmit }) => {\r\n              console.log(\"values\", values);\r\n              console.log(\"errors\", errors);\r\n              console.log(\"erros verify\", Object.keys(errors).length === 0);\r\n              return (\r\n                <Form\r\n                  className=\"mt-8 space-y-6\"\r\n                  onClick={() => console.log(\"sua api\")}\r\n                >\r\n                  <input type=\"hidden\" name=\"remember\" value=\"true\" />\r\n                  <div className=\"rounded-md shadow-sm -space-y-px\">\r\n                    <div>\r\n                      <div>Nome:</div>\r\n                      <label hemltFor=\"nome\" className=\"sr-only\">\r\n                        Nome\r\n                      </label>\r\n                      <Field\r\n                        id=\"nome\"\r\n                        name=\"nome\"\r\n                        type=\"nome\"\r\n                        required\r\n                        className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                      />\r\n                      {errors.nome && touched.nome && <div>{errors.nome}</div>}\r\n                    </div>\r\n                    <div>\r\n                      <div>Descrição:</div>\r\n                      <label htmlFor=\"descri\" className=\"sr-only\">\r\n                        Descrição\r\n                      </label>\r\n                      <Field\r\n                        id=\"descri\"\r\n                        name=\"descri\"\r\n                        type=\"descri\"\r\n                        required\r\n                        className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                      />\r\n                      {errors.descri && touched.descri && (\r\n                        <div>{errors.descri}</div>\r\n                      )}\r\n                    </div>\r\n                    <div>\r\n                      <div>Valor:</div>\r\n                      <label htmlFor=\"valor\" className=\"sr-only\">\r\n                        Valor\r\n                      </label>\r\n                      <Field\r\n                        id=\"valor\"\r\n                        name=\"valor\"\r\n                        type=\"valor\"\r\n                        required\r\n                        className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                      />\r\n                      {errors.valor && touched.valor && (\r\n                        <div>{errors.valor}</div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\" w-1/2 flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                      onClick={handleSubmit}\r\n                    >\r\n                      <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\"></span>\r\n                      Adicionar\r\n                    </button>\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\" w-1/2 flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                      onClick={() => {\r\n                        history.push(\"/\");\r\n                      }}\r\n                    >\r\n                      <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\"></span>\r\n                      Voltar\r\n                    </button>\r\n                  </div>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Adicionar;\r\n",["66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":3,"column":17,"nodeType":"74","messageId":"75","endLine":3,"endColumn":26},{"ruleId":"72","severity":1,"message":"76","line":3,"column":28,"nodeType":"74","messageId":"75","endLine":3,"endColumn":36},{"ruleId":"72","severity":1,"message":"77","line":8,"column":3,"nodeType":"74","messageId":"75","endLine":8,"endColumn":7},{"ruleId":"72","severity":1,"message":"73","line":1,"column":37,"nodeType":"74","messageId":"75","endLine":1,"endColumn":46},{"ruleId":"72","severity":1,"message":"78","line":2,"column":10,"nodeType":"74","messageId":"75","endLine":2,"endColumn":20},{"ruleId":"72","severity":1,"message":"79","line":71,"column":27,"nodeType":"74","messageId":"75","endLine":71,"endColumn":35},{"ruleId":"72","severity":1,"message":"79","line":50,"column":25,"nodeType":"74","messageId":"75","endLine":50,"endColumn":33},{"ruleId":"72","severity":1,"message":"73","line":1,"column":27,"nodeType":"74","messageId":"75","endLine":1,"endColumn":36},{"ruleId":"72","severity":1,"message":"76","line":1,"column":38,"nodeType":"74","messageId":"75","endLine":1,"endColumn":46},{"ruleId":"72","severity":1,"message":"79","line":39,"column":23,"nodeType":"74","messageId":"75","endLine":39,"endColumn":31},{"ruleId":"68","replacedBy":"80"},{"ruleId":"70","replacedBy":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Link' is defined but never used.","'useHistory' is defined but never used.","'response' is assigned a value but never used.",["82"],["83"],"no-global-assign","no-unsafe-negation"]